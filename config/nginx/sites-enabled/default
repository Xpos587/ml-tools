server {
    listen 80;
    
    auth_basic "clore";
    auth_basic_user_file /etc/apache2/.htpasswd;

    root /var/www/html;
    index index.html index.htm index.nginx-debian.html;

    server_name _;
    location / {
        try_files $uri $uri/ =404;
    }
    
    location /code-server/ {
        proxy_pass http://web_code/;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header Host $http_host;
        proxy_set_header X-NginX-Proxy true;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_redirect off;
    }

    location = /jupyter {
      rewrite ^/(.*)$ $1/ permanent;
    }
    location /jupyter {
      error_page 403 = @proxy_jupyter;
      deny 127.0.0.1;
      allow all;
      # set a webroot, if there is one
      root /var/www/html;
      try_files $uri @proxy_jupyter;
    }
    location @proxy_jupyter {
      #rewrite /jupyter(.*) $1  break;
      proxy_read_timeout 300s;
      proxy_pass http://upstream_jupyter;
      # pass some extra stuff to the backend
      proxy_set_header Host $host;
      proxy_set_header X-Real-Ip $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    }
    location ~ /jupyter/api/ {
            proxy_pass            http://upstream_jupyter;
            proxy_set_header      Host $host;
            # websocket support
            proxy_http_version    1.1;
            proxy_set_header      Upgrade "websocket";
            proxy_set_header      Connection "Upgrade";
            proxy_read_timeout    86400;
        }
    location ~ /jupyter/terminals/ {
            proxy_pass            http://upstream_jupyter;
            proxy_set_header      Host $host;
            # websocket support
            proxy_http_version    1.1;
            proxy_set_header      Upgrade "websocket";
            proxy_set_header      Connection "Upgrade";
            proxy_read_timeout    86400;
    }
}